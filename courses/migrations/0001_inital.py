# Generated by Django 2.1.4 on 2019-01-18 22:44

import courses.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('title', models.TextField()),
                ('statements', models.FileField(blank=True, upload_to=courses.models.get_statements_file_path)),
                ('show_statements', models.BooleanField(default=False)),
                ('duration', models.IntegerField(default=0)),
                ('coefficient', models.FloatField(default=1.0)),
                ('is_olymp', models.BooleanField(default=False)),
                ('judge', models.CharField(choices=[('EJ', 'Ejudge'), ('CF', 'Codeforces'), ('IN', 'Informatics')], default='EJ', max_length=2)),
                ('contest_id', models.IntegerField()),
                ('external_group_id', models.TextField(blank=True)),
                ('other_link', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContestLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('file', models.FileField(blank=True, upload_to=courses.models.get_contest_file_path)),
                ('link', models.TextField(blank=True)),
                ('new_tab', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='courses.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(unique=True)),
                ('title', models.TextField(blank=True)),
                ('subtitle', models.TextField(blank=True)),
                ('template', models.TextField(default='course.html')),
                ('ejudge_url', models.TextField(blank=True)),
                ('url', models.TextField(blank=True)),
                ('name_in_main', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('file', models.FileField(blank=True, upload_to=courses.models.get_course_file_path)),
                ('link', models.TextField(blank=True)),
                ('hidden', models.BooleanField(default=False)),
                ('new_tab', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='courses.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Main',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True)),
                ('subtitle', models.TextField(blank=True)),
                ('courses', models.ManyToManyField(to='courses.Course')),
            ],
        ),
        migrations.CreateModel(
            name='MainLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('file', models.FileField(blank=True, upload_to=courses.models.get_main_file_path)),
                ('link', models.TextField(blank=True)),
                ('hidden', models.BooleanField(default=False)),
                ('new_tab', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
                ('main', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='courses.Main')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(unique=True)),
                ('title', models.TextField(blank=True)),
                ('subtitle', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Surname and name')),
                ('ejudge_id', models.IntegerField(blank=True, null=True)),
                ('informatics_id', models.IntegerField(blank=True, null=True)),
                ('codeforces_handle', models.TextField(blank=True)),
                ('comment', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
                ('telegram_id', models.TextField(blank=True)),
                ('vk_id', models.TextField(blank=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='courses.Course')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantsGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('short_name', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='courses.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Standings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('olymp', models.BooleanField(default=False)),
                ('enable_marks', models.BooleanField(default=False)),
                ('js_for_contest_mark', models.TextField(blank=True)),
                ('js_for_total_mark', models.TextField(blank=True)),
                ('js', models.TextField(blank=True)),
                ('contests', models.ManyToManyField(related_name='standings', to='courses.Contest')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standings', to='courses.Course')),
            ],
            options={
                'verbose_name_plural': 'Standings',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('photo', models.FileField(blank=True, upload_to=courses.models.get_photo_path)),
                ('vk_id', models.TextField(blank=True)),
                ('telegram_id', models.TextField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='courses.ParticipantsGroup'),
        ),
        migrations.AddField(
            model_name='course',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='courses', to='courses.Teacher'),
        ),
        migrations.AddField(
            model_name='contest',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contests', to='courses.Course'),
        ),
    ]
